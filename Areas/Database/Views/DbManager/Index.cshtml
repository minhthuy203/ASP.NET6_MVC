@using MVC_Csharp.DatabaseContext;
@using Microsoft.EntityFrameworkCore;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@inject MvcDBContext dbContext;
@{
    ViewData["Title"] = "Thông tin Database";
    var connect = dbContext.Database.GetDbConnection();
    var dbname = connect.Database;
    var can_connection = dbContext.Database.CanConnect();
}
<partial name ="_AlertMessage" />
<h1>Thông tin</h1>
<p>- Database: @dbname</p>
<p>- Source: @connect.DataSource</p>
<p>- State: @connect.State</p>
<hr />
<h2>Migrations</h2>
@foreach (var migration in dbContext.Database.GetAppliedMigrations())
{
    <p>@migration</p>
}
@foreach (var migration in dbContext.Database.GetPendingMigrations())
{
    <p>@migration (pending)</p>
}
@if (!can_connection)
{
    <p class="alert alert-danger"> Không thể kết nối db</p>
}
@if(dbContext.Database.GetPendingMigrations().Any())
{
    <form method="post">
    <button type="submit" asp-action="UpdateDB" class="btn btn-success"> Update Db</button>
    </form>
}
@if (can_connection)
{
    <h2>Các Bảng</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
        @foreach (System.Data.DataRow row in table.Rows)
        {
            <li>@row["TABLE_NAME"]</li>
        }
    </ul>
    <a asp-action="DeleteDB" class="btn btn-danger"> Xóa Db</a>
}
